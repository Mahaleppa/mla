#clears R Environment 
rm(list=ls()) input <- read.csv("C:/Users/Admin/Desktop/BE_IT_2018_19/CL_VII_Assignments/Regression/input.csv") attach(input) 
names(input) 
 [1] "team"         "runs"         "at_bats"      "hits"         "homeruns"     
"bat_avg"      "strikeouts"   "stolen_bases" 
 [9] "wins"         "new_onbase"   "new_slug"     "new_obs"  
 
head(input,8) 
                 team runs at_bats hits homeruns bat_avg strikeouts stolen_ba ses wins new_onbase new_slug new_obs 
1       Texas Rangers  855    5659 1599      210   0.283        930          
143   96      0.340    0.460   0.800 
2      Boston Red Sox  875    5710 1600      203   0.280       1108          
102   90      0.349    0.461   0.810 
3      Detroit Tigers  787    5563 1540      169   0.277       1143           
49   95      0.340    0.434   0.773 4  Kansas City Royals  730    5672 1560      129   0.275       1006          
153   71      0.329    0.415   0.744 
5 St. Louis Cardinals  762    5532 1513      162   0.273        978           
57   90      0.341    0.425   0.766 6       New York Mets  718    5600 1477      108   0.264       1085          
130   77      0.335    0.391   0.725 
7    New York Yankees  867    5518 1452      222   0.263       1138          
147   97      0.343    0.444   0.788 
8   Milwaukee Brewers  721    5447 1422      185   0.261       1083           
94   96      0.325    0.425   0.750 
 
plot(runs~at_bats,main="Runs Vs At_bats",xlim=c(5350,5750),ylim=c(500,900)) 
 
  
cor(runs,at_bats) 
[1] 0.610627 
 
ind<- sample(2,nrow(input),replace =TRUE, prob = c(0.8,0.2)) train <- input[ind==1,] test <- input [ind==2,] train  
                   team runs at_bats hits homeruns bat_avg strikeouts stolen_ bases wins new_onbase new_slug 
1          Texas Rangers  855    5659 1599      210   0.283        930          
143   96      0.340    0.460 
2         Boston Red Sox  875    5710 1600      203   0.280       1108          
102   90      0.349    0.461 . 
. 
. 
 
test 
                  team runs at_bats hits homeruns bat_avg strikeouts stolen_b ases wins new_onbase new_slug new_obs 
5  St. Louis Cardinals  762    5532 1513      162   0.273        978           
57   90      0.341    0.425   0.766 
10      Houston Astros  615    5598 1442       95   0.258       1164          
118   56      0.311    0.374   0.684 
13        Chicago Cubs  654    5549 1423      148   0.256       1202           
69   71      0.314    0.401   0.715 
14     Cincinnati Reds  735    5612 1438      183   0.256       1250           
97   79      0.326    0.408   0.734 
25      Tampa Bay Rays  707    5436 1324      172   0.244       1193          
155   91      0.322    0.402   0.724 
 
model <- lm(runs~at_bats , data=train ) model 
 Call: lm(formula = runs ~ at_bats, data = train) 
 
Coefficients: 
(Intercept)      at_bats   
 -3390.0546       0.7399   
 
train_mean.runs <- mean(train$runs) 
plot(train$runs~train$at_bats,main="Runs Vs At_bats",xlim=c(5350,5750),ylim=c (500,900)) 
 
  
 
abline(h=train_mean.runs) 
 
 
  
  
train_mean.runs [1] 693.4 abline(model,col="red") 
  
 
train_predicted_Runs<-predict(model,train) train_predicted_Runs 
       1        2        3        4        6        7        8        9       11       12       15       16  
796.8936 834.6272 725.8657 806.5120 753.2410 692.5713 640.0403 711.8081 742.1 429 631.9017 688.8720 737.7037  
      17       18       19       20       21       22       23       24       26       27       28       29  
680.7334 685.9125 620.8035 722.9062 669.6352 685.1726 620.8035 643.7396 699.9
701 635.6010 668.8954 617.8440  
      30  
620.8035   
train$runs 
 [1] 855 875 787 730 718 867 721 735 708 644 667 713 654 704 731 743 619 625 610 645 641 624 570 593 556 
 
train_error <- (abs(train$runs - train_predicted_Runs)) train_error 
         1          2          3          4          6          7          8          
9         11         12  
 58.106394  40.372809  61.134319  76.511970  35.241027 174.428659  80.959729  
23.191929  34.142913  12.098345  
        15         16         17         18         19         20         21         
22         23         24  
 21.871970  24.703668  26.733353  18.087527 110.196458  20.093816  50.635240  
60.172599  10.803542   1.260358  
        26         27         28         29         30   58.970083  11.601026  98.895366  24.844045  64.803542  plot(train_error) 
 
  
  
train_SquaredError <- train_error * train_error 
> train_SquaredError 
           1            2            3            4            6            7            8            9  
 3376.353067  1629.963727  3737.404997  5854.081624  1241.929967 30425.357124  
6554.477657   537.865592  
          11           12           15           16           17           18           19           20  
 1165.738541   146.369952   478.383062   610.271222   714.672183   327.158636 
12143.259417   403.761449  
          21           22           23           24           26           27           28           29  
 2563.927541  3620.741634   116.716514     1.588501  3477.470696   134.583806  
9780.293396   617.226564  
          30  
 4199.499019  
 train_SSE <- sum(train_SquaredError) train_SSE [1] 93859.1 
 
n<- nrow(train) train_MSE <- (train_SSE/n) train_MSE [1] 3754.364 
 train_SumSR <- (train_mean.runs-train_predicted_Runs) train_SSR<-train_SumSR*train_SumSR train_SSR <- sum(train_SSR) train_SST <- train_SSR +train_SSE train_SST [1] 182962 
train_Rsquared<- train_SSR/train_SST train_Rsquared 
[1] 0.4870022 
 
# Test MSE  test_mean.runs <- mean(test$runs) test_predicted_Runs<-predict(model,test) 
test_predicted_Runs 
       5       10       13       14       25  702.9296 751.7613 715.5074 762.1195 631.9017  test$runs 
[1] 762 615 654 735 707 
test_error <- (abs(test$runs - test_predicted_Runs)) test_error 
        5        10        13        14        25   59.07042 136.76128  61.50744  27.11952  75.09835  plot(test_error) 
test_SquaredError <- test_error * test_error test_SquaredError 
         5         10         13         14         25   3489.3145 18703.6472  3783.1654   735.4682  5639.7614   plot(test_SquaredError)  test_SSE <- sum(test_SquaredError) 
 test_SSE [1] 32351.36  n<- nrow(test)  test_MSE <- (test_SSE/n)  test_MSE  [1] 6470.271   
 test_SumSR <- (test_mean.runs-test_predicted_Runs)  test_SSR<-test_SumSR*test_SumSR  test_SSR <- sum(test_SSR)  test_SST <- test_SSR +test_SSE  test_SST [1] 44615.24  
 test_Rsquared<- test_SSR/test_SST  test_Rsquared 
[1] 0.274881 
 
